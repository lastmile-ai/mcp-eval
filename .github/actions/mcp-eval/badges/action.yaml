name: "Generate MCP-Eval Badges"
description: "Generate badges from MCP-Eval JSON report using shields.io"
branding:
  icon: award
  color: green
inputs:
  report-path:
    description: "Path to the MCP-Eval JSON report file"
    required: true
  output-dir:
    description: "Directory to write generated badge files (optional, for caching)"
    default: "mcpeval-reports/badges"
    required: false
  format:
    description: "Output format: svg, endpoint, or both (default: both)"
    default: "both"
    required: false
  tests-label:
    description: "Label text for the tests badge"
    default: "mcp-tests"
    required: false
  coverage-label:
    description: "Label text for the coverage badge"
    default: "mcp-cov"
    required: false
  upload-artifacts:
    description: "Upload badges as workflow artifacts"
    default: "false"
    required: false
  artifact-name:
    description: "Name for the uploaded badge artifacts"
    default: "mcpeval-badges"
    required: false
outputs:
  tests-badge-path:
    description: "Path to the generated tests badge SVG (if output-dir is set)"
    value: ${{ steps.generate.outputs.tests_badge_path }}
  coverage-badge-path:
    description: "Path to the generated coverage badge SVG (if output-dir is set)"
    value: ${{ steps.generate.outputs.coverage_badge_path }}
runs:
  using: "composite"
  steps:
    - name: Generate badges
      id: generate
      shell: bash
      run: |
        set -euo pipefail
        
        # Check if local script exists, otherwise fetch from upstream
        if [ -f "scripts/generate_badges.py" ]; then
          echo "Using local badge generation script"
          SCRIPT_PATH="scripts/generate_badges.py"
        else
          echo "Fetching badge generation script from upstream"
          # Create a temporary directory for the mcp-eval script
          mkdir -p .mcp-eval-action
          cd .mcp-eval-action
          
          # Initialize git and configure sparse checkout
          git init
          git remote add origin https://github.com/lastmile-ai/mcp-eval.git
          git config core.sparseCheckout true
          
          # Configure sparse checkout to only get the script we need
          echo "scripts/generate_badges.py" >> .git/info/sparse-checkout
          
          # Fetch and checkout the specific file (pinned to a stable commit)
          # TODO: Update this to a specific tag/release when available
          git fetch --depth=1 origin main
          git checkout origin/main
          
          # Move back to the workspace root
          cd ..
          SCRIPT_PATH=".mcp-eval-action/scripts/generate_badges.py"
        fi
        
        # Run the badge generation script with uv
        uv run "$SCRIPT_PATH" \
          --report "${{ inputs.report-path }}" \
          --outdir "${{ inputs.output-dir }}" \
          --label-tests "${{ inputs.tests-label }}" \
          --label-cov "${{ inputs.coverage-label }}" \
          --format "${{ inputs.format }}"
        
        # Set output paths if badges were generated
        if [ -n "${{ inputs.output-dir }}" ]; then
          if [ -f "${{ inputs.output-dir }}/tests.svg" ] && [ -f "${{ inputs.output-dir }}/coverage.svg" ]; then
            echo "tests_badge_path=$(realpath ${{ inputs.output-dir }}/tests.svg)" >> $GITHUB_OUTPUT
            echo "coverage_badge_path=$(realpath ${{ inputs.output-dir }}/coverage.svg)" >> $GITHUB_OUTPUT
          fi
        fi

    - name: Upload badge artifacts
      if: ${{ inputs.upload-artifacts == 'true' && inputs.output-dir != '' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ inputs.output-dir }}
        retention-days: 14
        if-no-files-found: warn